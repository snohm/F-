%{

PAROLE PALINDROME
================

Consideriamo il linguaggio definito sull'alfabeto {a,b,c}.

Per rappresentare i simboli dell'alfabeto  e le parole del linguaggio usiamo le seguenti definizioni:

}%

% simboli dell'alfabteo
symbol : type.  %name symbol S.  

a : symbol.
b : symbol.
c : symbol.

symb : symbol -> type.  

s/a : symb a.
s/b : symb b.
s/c : symb c.

% Rappresentazione di parole (= lista di simboli)

word : type.  %name word W.

nil : word.   % parola vuota
# : symbol -> word -> word. %infix right 8 #.   % costruttore di parole


%{
Per ogni relazione che viene definita  dare gli opportuni modi.

1) Definire il predicato 

 snoc : symbol -> word -> word -> type.

che dato un simbolo S e una parola W genera la parola ottenuta ponendo S in coda a W.

}%



%{
Scrivere una query (usando %query) che pone il simbolo c in coda alla parola 'a # b # a # nil'
(la parola ottenuta deve essere  'a # b # a # c # nil').

}%





%{

2) Consideriamo i numeri naturali

}%

nat : type.  %name nat N.
z : nat.
s : nat -> nat.

% abbreviations

0 = z.
1 = s z.
2 = s 1.
3 = s 2.
4 = s 3.
5 = s 4.
6 = s 5.


%{

Definire il predicato 

palin : nat -> word -> type.

che dato un numero naturale N *pari* genera tutte le parole palindrome di lunghezza N.

Ad esempio, per N=2  le parole palindrome sono le seguenti 3:

 a # a # nil     // "aa"
 b # b # nil     // "bb"
 c # c # nil     // "cc"

Per N=4, le parole palindrome sono le seguenti 9:

a # a # a # a # nil     b # a # a # b # nil     c # a # a # c # nil

a # b # b # a # nil     b # b # b # b # nil     c # b # b # c # nil
 
a # c # c # a # nil     b # c # c # b # nil.    c # c # c # c # nil.


Notare che ogni parola di lunghezza 2  genera 3 parole palindrome di lunghezza 4
(ad esempio, "aa" genera "aaaa", "baab", "caac").

Si consiglia di usare il predicato snoc definito nel punto precedente.

}%



%{
Scrivere una query (usando %query) che genera tutte le parole palindrome di lunghezza 2
e una query che genera tutte le parole palindrome di lunghezza 4.

}%